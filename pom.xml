<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!--parent>
        <groupId>org.ow2.mind</groupId>
        <artifactId>mind-parent</artifactId>
        <version>6</version>
    </parent-->

    <groupId>org.ow2.mind</groupId>
    <artifactId>mind4se-compiler</artifactId>
    <version>2.1-SNAPSHOT</version>
    <name>MIND4SE compiler</name>
    <packaging>pom</packaging>

    <description>
      MIND4SE compiler is the tool-set that support the development of 
      component-based software written with the Mind programming model
      for Schneider Electric purposes.
    </description>
    
    <properties>
        <release.promotion>Alpha</release.promotion>
        <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
        <release.buildNumber>${maven.build.timestamp}</release.buildNumber>
    </properties>

    <modules>
        <module>../mind-compiler</module>
        <module>../Optimization-Backend/adl-frontend-static</module>
        <module>../single-interface-plugin</module>
        <module>../Optimization-Backend/cpl-preproc-static</module>
        <module>../Optimization-Backend/adl-backend-static</module>
        <module>../global-extensions/ext-parser</module>
        <module>../global-extensions/global-extensions</module>
        <module>../dumpdot-annotation</module>
        <module>../mindot-viewer</module>
        <module>../mindunit/mindunit-runtime</module>
        <module>../mindunit/mindunit</module>
        <module>../iar-extension</module>
        <module>../garbage-composite-annotation</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mindc</artifactId>
            <version>${project.version}</version>
            <classifier>bin</classifier>
            <type>zip</type>
        </dependency>
        
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>adl-frontend-static</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>single-interface-plugin</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>cpl-preproc-static</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>adl-backend-static</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ext-parser</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>global-extensions</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>dumpdot-annotation</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mindot-viewer</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mindunit</artifactId>
            <version>${project.version}</version>
            <classifier>bin</classifier>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iar-extension</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>
        
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>garbage-composite-annotation</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>

            <!-- Sub-modules dependencies. This avoid to specify versions in sub-poms -->
            <!--dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mind-compiler</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>adl-frontend-static</artifactId>
                <version>${project.version}</version>
            </dependency>
            
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>single-interface-plugin</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>cpl-preproc-static</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>adl-backend-static</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>ext-parser</artifactId>
                <version>${project.version}</version>
            </dependency>
            
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>global-extensions</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>dumpdot-annotation</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mindot-viewer</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mindunit-runtime</artifactId>
                <version>${project.version}</version>
            </dependency!>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mindunit</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>iar-extension</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>garbage-composite-annotation</artifactId>
                <version>${project.version}</version>
            </dependency-->

            <!--dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>idl-backend</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>adl-parser</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>adl-frontend</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>adl-frontend</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>adl-backend</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>adl-backend</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>common-frontend</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>common-frontend</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>common-backend</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>cpl-preproc</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mindc</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>fractal-runtime</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>plugin-loader</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>annotations</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>fractal-adl-bundle</artifactId>
                <version>${project.version}</version>
                <type>bundle</type>
            </dependency-->

            <!-- Other dependencies -->
            <!--dependency>
                <groupId>org.objectweb.fractal.fractaladl</groupId>
                <artifactId>fractal-adl</artifactId>
                <version>${fractaladl.dependencies.version}</version>
            </dependency>

            <dependency>
                <groupId>org.objectweb.fractal.fractaladl</groupId>
                <artifactId>ast-core</artifactId>
                <version>${fractaladl.dependencies.version}</version>
            </dependency>

            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>stringtemplate</artifactId>
                <version>3.2</version>
            </dependency>

            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr-runtime</artifactId>
                <version>3.3</version>
            </dependency>

            <dependency>
                <groupId>antlr</groupId>
                <artifactId>antlr</artifactId>
                <version>2.7.7</version>
            </dependency>

            <dependency>
                <groupId>com.google.collections</groupId>
                <artifactId>google-collections</artifactId>
                <version>1.0</version>
            </dependency>
            
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>2.0</version>
            </dependency>

            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-multibindings</artifactId>
                <version>2.0</version>
            </dependency-->

        </dependencies>
    </dependencyManagement>

    <!--distributionManagement>
        <site>
            <id>OW2</id>
            <name>MINDC OW2's site</name>
            <url>scp://${ow2.hostname}${ow2.site.deploy.dir}/mindc-${project.version}</url>
        </site>
    </distributionManagement-->
    
    <pluginRepositories>
        <pluginRepository>
            <id>maestro-rel</id>
            <name>Maestro releases</name>
            <url>https://repo.maestrodev.com/archiva/repository/CollabNet.TeamForge.Plugins.releases</url>
        </pluginRepository>
    </pluginRepositories>
  
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <!-- Sub modules have the same version as this one. -->
                    <autoVersionSubmodules>true</autoVersionSubmodules>

                    <!--
                        Workaround of
                        http://jira.codehaus.org/browse/MJAVADOC-276. Force
                        installation of artifacts at preparation stage
                    -->
                    <preparationGoals>clean install</preparationGoals>
                </configuration>
            </plugin>
            
            <!-- Add this plugin in parent POM to ensure that 
                 "factal-adl-bundle" artifact of type "bundle" is correctly
                 handled. -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.0.1</version>
                <extensions>true</extensions>
            </plugin>
                        
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-runtime</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeTransitive>true</excludeTransitive>
                            <classifier>bin</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/assemble/bin-release.xml</descriptor>
                     </descriptors>
                    <finalName>${project.build.finalName}-${release.buildNumber}-${release.promotion}</finalName>
                    <!--finalName>${project.build.finalName}</finalName-->
                    <appendAssemblyId>true</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        
            <plugin>
                <groupId>com.maestrodev</groupId>
                <artifactId>collabnet-maven-plugin</artifactId>
                <version>1.1</version>
                <configuration>
                    <project>mind4se</project>
                    <teamForgeUrl>https://teamforge.schneider-electric.com</teamForgeUrl>
                    <teamForgeServerId>teamforge.schneider-electric</teamForgeServerId>
                    <createRelease>true</createRelease>
                    <pkg>test-mind4se</pkg>
                    <packageDescription>${project.description}</packageDescription>
                    <!--release>${project.build.finalName}-${release.buildNumber}-${release.promotion}</release-->
                    <release>${project.build.finalName}</release>
                    <!--releaseMaturity>${release.promotion}</releaseMaturity-->
                    <releaseMaturity>Development Build</releaseMaturity>
                    <releaseStatus>active</releaseStatus>
                </configuration>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <goals>
                            <goal>deploy-to-releases</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
    
        </plugins>

        <pluginManagement>
            <plugins>            
                <!-- By default run tests for groups "functional" and "checkin" -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <groups>${test.groups}</groups>
                    </configuration>
                </plugin>

                <!-- Configure JavaCC plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>javacc-maven-plugin</artifactId>
                    <version>2.6</version>
                    <executions>
                        <execution>
                            <id>jtb-javacc</id>
                            <goals>
                                <goal>jtb-javacc</goal>
                            </goals>
                            <configuration>
                                <specialTokens>true</specialTokens>
                                <printer>true</printer>
                                <javadocFriendlyComments>true</javadocFriendlyComments>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Configure antlr plugin -->
                <plugin>
                    <groupId>org.antlr</groupId>
                    <artifactId>antlr3-maven-plugin</artifactId>
                    <version>3.3</version>
                    <executions>
                        <execution>
                            <id>generate parser</id>
                            <goals>
                                <goal>antlr</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.3</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.ant</groupId>
                            <artifactId>ant-jsch</artifactId>
                            <version>1.7.0</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <!--
                                exclude JavaFactory classes generated by the
                                fractalADL StaticJavaGenerator in the
                                cecilia-adl module.
                            -->
                            <exclude>**/*JavaFactory.java</exclude>
                            <!-- exclude parser generated by JavaCC -->
                            <exclude>
                                org/ow2/mind/**/jtb/**/*.java
                            </exclude>
                            <!-- exclude parser generated by antlr -->
                            <exclude>
                                org/ow2/mind/preproc/parser/*.java
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
                
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.1.1</version>
                </plugin>
                
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                	<groupId>org.eclipse.m2e</groupId>
                	<artifactId>lifecycle-mapping</artifactId>
                	<version>1.0.0</version>
                	<configuration>
                		<lifecycleMappingMetadata>
                			<pluginExecutions>
                				<pluginExecution>
                					<pluginExecutionFilter>
                						<groupId>
                							org.codehaus.mojo
                						</groupId>
                						<artifactId>
                							javacc-maven-plugin
                						</artifactId>
                						<versionRange>
                							[2.6,)
                						</versionRange>
                						<goals>
                							<goal>jtb-javacc</goal>
                						</goals>
                					</pluginExecutionFilter>
                					<action>
                						<configurator>
          									<id>org.objectledge.maven.connectors.jjtree-javacc</id>
        								</configurator>
                					</action>
                				</pluginExecution>
                			</pluginExecutions>
                		</lifecycleMappingMetadata>
                	</configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
